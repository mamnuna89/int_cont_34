from django.shortcuts import render, redirect, get_object_or_404
from django.http import JsonResponse, HttpResponse, HttpResponseRedirect
from django.views.decorators.http import require_POST
from django.views.decorators.csrf import csrf_exempt
from django.urls import reverse

from .models import Risk, ControlPoint, Department, Division, ProcessDiagram
from .forms import RiskForm, ControlPointForm

import openpyxl

# üëâ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–¥—É–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
def control_index(request):
    return render(request, 'control_app/control_index.html')

def process_list(request):
    processes = ProcessDiagram.objects.select_related('department', 'division').all()
    return render(request, 'control_app/process_list.html', {'processes': processes})

def process_create(request):
    if request.method == 'POST':
        form = ProcessDiagramForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('control:process_list')
    else:
        form = ProcessDiagramForm()
    return render(request, 'control_app/process_form.html', {'form': form})

def process_edit(request, pk):
    process = get_object_or_404(ProcessDiagram, pk=pk)
    if request.method == 'POST':
        form = ProcessDiagramForm(request.POST, instance=process)
        if form.is_valid():
            form.save()
            return redirect('control:process_list')
    else:
        form = ProcessDiagramForm(instance=process)
    return render(request, 'control_app/process_form.html', {'form': form})

def process_delete(request, pk):
    process = get_object_or_404(ProcessDiagram, pk=pk)
    process.delete()
    return redirect('control:process_list')

def export_processes_excel(request):
    processes = ProcessDiagram.objects.all()
    wb = openpyxl.Workbook()
    ws = wb.active
    ws.append(['Code', 'Name', 'Department', 'Division'])
    for p in processes:
        ws.append([p.code, p.name, p.department.name if p.department else '', p.division.name if p.division else ''])

    response = HttpResponse(content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
    response['Content-Disposition'] = 'attachment; filename=processes.xlsx'
    wb.save(response)
    return response

# üëâ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–∏—Å–∫–æ–≤
def risk_list(request):
    risks = Risk.objects.all()
    department_filter = request.GET.get('department')
    risk_type_filter = request.GET.get('risk_type')
    level_filter = request.GET.get('level')

    if department_filter:
        risks = risks.filter(department__icontains=department_filter)
    if risk_type_filter:
        risks = risks.filter(risk_type__icontains=risk_type_filter)
    if level_filter:
        try:
            level_value = int(level_filter)
            risks = risks.filter(level=level_value)
        except ValueError:
            pass

    for risk in risks:
        if risk.level is not None:
            if risk.level <= 6:
                risk.color = 'green'
            elif 7 <= risk.level <= 14:
                risk.color = 'yellow'
            else:
                risk.color = 'red'
        else:
            risk.color = 'gray'

    return render(request, 'control_app/control_risk_list.html', {
        'risks': risks,
        
    })

# üëâ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–∏—Å–∫–∞
def risk_create(request):
    if request.method == 'POST':
        form = RiskForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('control_risk_list')
    else:
        form = RiskForm()
    return render(request, 'control_app/control_risk_form.html', {
        'form': form,
        
    })

# üëâ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∏—Å–∫–∞
def risk_edit(request, risk_id):
    risk = get_object_or_404(Risk, id=risk_id)
    if request.method == 'POST':
        form = RiskForm(request.POST, instance=risk)
        if form.is_valid():
            form.save()
            return redirect('control_risk_list')
    else:
        form = RiskForm(instance=risk)
    return render(request, 'control_app/control_risk_form.html', {
        'form': form,
        'risk': risk,
        
    })

# üëâ –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞
@require_POST
def risk_delete(request, pk):
    risk = get_object_or_404(Risk, pk=pk)
    risk.delete()
    return redirect('control_risk_list')

# üëâ –≠–∫—Å–ø–æ—Ä—Ç —Ä–∏—Å–∫–æ–≤ –≤ Excel
def export_risks_excel(request):
    wb = openpyxl.Workbook()
    ws = wb.active
    ws.title = "Risks"
    ws.append(['‚Ññ', 'Code', 'Name', 'Type', 'Source', 'Registration Date', 'Department',
               'Owner', 'Process', 'Probability', 'Impact', 'Level'])

    risks = Risk.objects.all()
    for i, risk in enumerate(risks, start=1):
        ws.append([
            i,
            risk.risk_code,
            risk.name,
            risk.risk_type,
            risk.source,
            risk.registered_at.strftime('%Y-%m-%d') if risk.registered_at else '',
            str(risk.department),
            risk.owner,
            risk.process,
            risk.probability,
            risk.impact,
            risk.level
        ])

    response = HttpResponse(content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
    response['Content-Disposition'] = 'attachment; filename=internal_control_risks.xlsx'
    wb.save(response)
    return response

# üëâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
def department_structure(request):
    departments = Department.objects.prefetch_related(
        'divisions__processdiagram_set'
    ).all()
    
    return render(request, 'control_app/department_structure.html', {
        'departments': departments,
    
    })

# üëâ –û–±–∑–æ—Ä –∫–∞—Ä—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
def process_map_overview(request):
    departments = Department.objects.prefetch_related('divisions').all()
    return render(request, 'control_app/process_map_overview.html', {
        'departments': departments,
        
    })

# üëâ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–∏–∞–≥—Ä–∞–º–º
def diagram_list(request):
    diagrams = ProcessDiagram.objects.select_related('department', 'division').all()
    return render(request, 'control_app/process_list.html', {
        'diagrams': diagrams,
        
    })


# üëâ –û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –¥–ª—è –Ω–æ–≤–æ–π —Å—Ö–µ–º—ã
def editor_view(request):
    departments = Department.objects.prefetch_related('divisions').all()
    return render(request, 'control_app/bpmn_editor.html', {
        'departments': departments,
        
    })

# üëâ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ö–µ–º—ã
@require_POST
def save_process_diagram(request):
    name = request.POST.get('name')
    department_id = request.POST.get('department_id')
    division_id = request.POST.get('division_id')
    bpmn_xml = request.POST.get('bpmn_xml')

    department = Department.objects.get(id=department_id)
    division = Division.objects.get(id=division_id)

    diagram = ProcessDiagram.objects.create(
        name=name,
        department=department,
        division=division,
        bpmn_xml=bpmn_xml,
        created_by=request.user if request.user.is_authenticated else None
    )
    return JsonResponse({'status': 'success', 'diagram_id': diagram.id})


# üëâ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ö–µ–º—ã
def diagram_view(request, diagram_id):
    diagram = get_object_or_404(ProcessDiagram, id=diagram_id)
    return render(request, 'control_app/diagram_view.html', {
        'diagram': diagram,
        'bpmn_xml': diagram.bpmn_xml
    })

# üëâ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ö–µ–º—ã
def edit_diagram(request, diagram_id):
    diagram = get_object_or_404(ProcessDiagram, id=diagram_id)

    if request.method == 'POST':
        # ‚ùó –ù–µ –∏–∑–º–µ–Ω—è–µ–º department –∏ division ‚Äî —á—Ç–æ–±—ã code –Ω–µ —Å–±–∏–≤–∞–ª—Å—è
        diagram.name = request.POST.get('name')
        diagram.bpmn_xml = request.POST.get('bpmn_xml')
        diagram.save()
        return JsonResponse({'status': 'success'})

    departments = Department.objects.prefetch_related('divisions').all()
    return render(request, 'control_app/bpmn_editor.html', {
        'departments': departments,
        'diagram': diagram,
        
    })



# üëâ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã
@require_POST
def delete_diagram(request, diagram_id):
    diagram = get_object_or_404(ProcessDiagram, id=diagram_id)
    diagram.delete()
    return HttpResponseRedirect(reverse('diagram_list'))

# üëâ –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ä–∏—Å–∫–æ–≤

def control_export_risks_excel(request):
    risks = Risk.objects.all()

    workbook = openpyxl.Workbook()
    sheet = workbook.active
    sheet.title = "Internal Control Risks"

    headers = [
        '‚Ññ', 'Code', 'Name', 'Risk Type', 'Source',
        'Registration Date', 'Department', 'Owner',
        'Process', 'Probability', 'Impact', 'Risk Level'
    ]
    sheet.append(headers)

    for idx, risk in enumerate(risks, start=1):
        sheet.append([
            idx,
            risk.risk_code,
            risk.name,
            risk.risk_type,
            risk.source,
            risk.registered_at.strftime('%Y-%m-%d') if risk.registered_at else '',
            str(risk.department),
            risk.owner,
            risk.process,
            risk.probability,
            risk.impact,
            risk.level
        ])

    response = HttpResponse(content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
    response['Content-Disposition'] = 'attachment; filename=internal_control_risks.xlsx'
    workbook.save(response)
    return response

# üëâ –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —Ç–æ—á–µ–∫
def control_point_list(request):
    selected_department = request.GET.get('department')
    selected_process = request.GET.get('process')

    control_points = ControlPoint.objects.all()
    if selected_department:
        control_points = control_points.filter(division__department__name=selected_department)
    if selected_process:
        control_points = control_points.filter(process__icontains=selected_process)

    departments = Department.objects.prefetch_related('divisions__processdiagram_set')


    return render(request, 'control_app/control_point_list.html', {
        'control_points': control_points,
        'departments': departments,
        'selected_department': selected_department,
        'selected_process': selected_process,
        
    })

# üëâ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è
def control_point_create(request):
    if request.method == 'POST':
        form = ControlPointForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('control_point_list')
    else:
        form = ControlPointForm()
    return render(request, 'control_app/control_point_form.html', {
        'form': form,
        
    })

# üëâ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è
def control_point_edit(request, pk):
    point = get_object_or_404(ControlPoint, pk=pk)
    if request.method == 'POST':
        form = ControlPointForm(request.POST, instance=point)
        if form.is_valid():
            form.save()
            return redirect('control_point_list')
    else:
        form = ControlPointForm(instance=point)
    return render(request, 'control_app/control_point_form.html', {
        'form': form,
        
    })

# üëâ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è
@require_POST
def control_point_delete(request, pk):
    point = get_object_or_404(ControlPoint, pk=pk)
    point.delete()
    return redirect('control_point_list')

# üëâ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∏—Å–∫–æ–≤ –ø–æ –ø—Ä–æ—Ü–µ—Å—Å—É
def get_risks_by_process(request):
    process = request.GET.get('process')
    risks = Risk.objects.filter(process__iexact=process)
    data = [{'id': r.id, 'name': f"{r.risk_code} ‚Äî {r.name}"} for r in risks]
    return JsonResponse({'risks': data})

# üëâ –≠–∫—Å–ø–æ—Ä—Ç —Ç–æ—á–µ–∫ –∫–æ–Ω—Ç—Ä–æ–ª—è
def export_control_points_excel(request):
    control_points = ControlPoint.objects.all()

    workbook = openpyxl.Workbook()
    sheet = workbook.active
    sheet.title = "Control Points"

    headers = [
        'Process', 'Related Risk', 'Control Action', 'Control Procedure',
        'Control Type', 'Frequency', 'Responsible Person',
        'Control Method', 'Implemented'
    ]
    sheet.append(headers)

    for p in control_points:
        sheet.append([
            p.process,
            f"{p.related_risk.risk_code} ‚Äî {p.related_risk.name}" if p.related_risk else "",
            p.control_action,
            p.control_procedure,
            p.get_control_type_display(),
            p.frequency,
            p.responsible_person,
            p.get_control_method_display(),
            'Yes' if p.implemented else 'No'
        ])

    response = HttpResponse(
        content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
    )
    response['Content-Disposition'] = 'attachment; filename=control_points.xlsx'
    workbook.save(response)
    return response
